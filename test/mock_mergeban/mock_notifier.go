// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/notifier.go

// Package mock_mergeban is a generated GoMock package.
package mock_mergeban

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockNotifier is a mock of Notifier interface
type MockNotifier struct {
	ctrl     *gomock.Controller
	recorder *MockNotifierMockRecorder
}

// MockNotifierMockRecorder is the mock recorder for MockNotifier
type MockNotifierMockRecorder struct {
	mock *MockNotifier
}

// NewMockNotifier creates a new mock instance
func NewMockNotifier(ctrl *gomock.Controller) *MockNotifier {
	mock := &MockNotifier{ctrl: ctrl}
	mock.recorder = &MockNotifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNotifier) EXPECT() *MockNotifierMockRecorder {
	return m.recorder
}

// Notify mocks base method
func (m *MockNotifier) Notify(responseURL, responseBody string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Notify", responseURL, responseBody)
}

// Notify indicates an expected call of Notify
func (mr *MockNotifierMockRecorder) Notify(responseURL, responseBody interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Notify", reflect.TypeOf((*MockNotifier)(nil).Notify), responseURL, responseBody)
}
